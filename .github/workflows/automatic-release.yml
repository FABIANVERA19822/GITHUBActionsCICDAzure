name: ghactions-build-imagetag-app
run-name: Deploy App .net8 Hello World ðŸš€ ${{ inputs.Environment }}

on:
  workflow_dispatch:
    inputs:
      Environment:
        type: choice
        description: 'Environment'
        required: true
        options: 
            - dev
            - stg
            - uat
            - prod

permissions:
  id-token: write
  contents: write 
env:
  ACRREPOSITORY: ${{ secrets.ACRREPOSITORY }}
  ACRREGISTRY: ${{ secrets.ACRREGISTRY }}  # "153169536464.dkr.ecr.us-east-1.amazonaws.com"
  DOCKER_BUILDKIT: ${{ secrets.DOCKER_BUILDKIT }} #1
  AZURE_REGION: ${{ secrets.AZURE_REGION }} # "us-east-1"
  ENVSHORTNAME: ${{ secrets.ENV_SHORT_NAME }} # dev,qa,main
  ENVFULLNAME: ${{ secrets.ENV_FULL_NAME }} #development, quality
  NAMESPACE: ${{ secrets.NAMESPACE }}

jobs:
  Workflow_Deployment_LogicApp:
    if: ${{ github.base_ref }} == 'refs/heads/main'
    runs-on: internal
    environment: ${{ inputs.Environment }}

    steps:
     - name: Checkout code
       uses: actions/checkout@v2


     - name: Az CLI login
       uses: azure/login@v1
       with:
         client-id: ${{ vars.AZURE_CLIENT_ID }}
         tenant-id: ${{ vars.AZURE_TENANT_ID }}
         subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
         enable-AzPSSession: true

     - name: Generate SemVer
       id: semver
       run: |
         echo "::set-output name=SEMVER::1.0"
     - name: Generate build ID
       id: prep
       run: |
          sha=${GITHUB_SHA::8}
          ts=$(date +%s%3N)
          echo "::set-output name=BUILD_ID::set-${{ env.ENVSHORTNAME }}-helloapp-${{ steps.semver.outputs.SEMVER }}.${ts}"

     - name: Build and tag Docker image
       run: docker build -f Dockerfile --tag ${{ env.ACRREGISTRY }}/${{ env.ACRREPOSITORY }}:${{ env.BUILD_ID }} .
       working-directory: /src/
       env:
        BUILD_ID: ${{ steps.prep.outputs.BUILD_ID }}
        ECRREGISTRY: ${{ env.ACRREGISTRY }}
        ECRREPOSITORY: ${{ env.ACRREPOSITORY }}

     - name: Log in to Azure Container Registry
       env:
         AZURE_CONTAINER_REGISTRY: ${{ env.ACRREGISTRY }}
       run: |
         az acr login --name $AZURE_CONTAINER_REGISTRY

     - name: Push Docker image to Azure ACR
       run: |
         docker push ${{ env.ACRREGISTRY }}/${{ env.ACRREPOSITORY }}:${{ env.BUILD_ID }}
       env:
         ACRREGISTRY: ${{ env.ACRREGISTRY }}
         ACRREPOSITORY: ${{ env.ACRREPOSITORY }}
         BUILD_ID: ${{ steps.prep.outputs.BUILD_ID }}